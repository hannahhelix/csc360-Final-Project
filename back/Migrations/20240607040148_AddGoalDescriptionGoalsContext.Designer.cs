// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using back;

#nullable disable

namespace back.Migrations
{
    [DbContext(typeof(GoalsContext))]
    [Migration("20240607040148_AddGoalDescriptionGoalsContext")]
    partial class AddGoalDescriptionGoalsContext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("back.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("GoalSavingsBalance")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("InitialSavingsBalance")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("back.BudgetGoals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CurrentAmount")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("GoalAmount")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("BudgetGoals");
                });

            modelBuilder.Entity("back.GoalMarkers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCheckedOff")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Month")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SavingsGoalId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SavingsGoalId");

                    b.ToTable("GoalMarkers");
                });

            modelBuilder.Entity("back.SavingsGoals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CurrentSavingsBalance")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("GoalAmount")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("SavingsGoals");
                });

            modelBuilder.Entity("back.TransactionHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SavingsGoalId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SavingsGoalId");

                    b.ToTable("TransactionHistories");
                });

            modelBuilder.Entity("back.BudgetGoals", b =>
                {
                    b.HasOne("back.Account", "Account")
                        .WithMany("BudgetGoalsList")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("back.GoalMarkers", b =>
                {
                    b.HasOne("back.SavingsGoals", "SavingsGoal")
                        .WithMany("GoalMarkersList")
                        .HasForeignKey("SavingsGoalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SavingsGoal");
                });

            modelBuilder.Entity("back.SavingsGoals", b =>
                {
                    b.HasOne("back.Account", "Account")
                        .WithMany("SavingsGoalsList")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("back.TransactionHistory", b =>
                {
                    b.HasOne("back.SavingsGoals", "SavingsGoal")
                        .WithMany("TransactionHistories")
                        .HasForeignKey("SavingsGoalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SavingsGoal");
                });

            modelBuilder.Entity("back.Account", b =>
                {
                    b.Navigation("BudgetGoalsList");

                    b.Navigation("SavingsGoalsList");
                });

            modelBuilder.Entity("back.SavingsGoals", b =>
                {
                    b.Navigation("GoalMarkersList");

                    b.Navigation("TransactionHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
